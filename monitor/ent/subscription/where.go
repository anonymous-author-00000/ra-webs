// Code generated by ent, DO NOT EDIT.

package subscription

import (
	"entgo.io/ent/dialect/sql"
	"github.com/anonymous-author-00000/ra-webs/monitor/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Subscription {
	return predicate.Subscription(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Subscription {
	return predicate.Subscription(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Subscription {
	return predicate.Subscription(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Subscription {
	return predicate.Subscription(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Subscription {
	return predicate.Subscription(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Subscription {
	return predicate.Subscription(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Subscription {
	return predicate.Subscription(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Subscription {
	return predicate.Subscription(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Subscription {
	return predicate.Subscription(sql.FieldLTE(FieldID, id))
}

// Endpoint applies equality check predicate on the "endpoint" field. It's identical to EndpointEQ.
func Endpoint(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldEQ(FieldEndpoint, v))
}

// P256dh applies equality check predicate on the "p256dh" field. It's identical to P256dhEQ.
func P256dh(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldEQ(FieldP256dh, v))
}

// Auth applies equality check predicate on the "auth" field. It's identical to AuthEQ.
func Auth(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldEQ(FieldAuth, v))
}

// EndpointEQ applies the EQ predicate on the "endpoint" field.
func EndpointEQ(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldEQ(FieldEndpoint, v))
}

// EndpointNEQ applies the NEQ predicate on the "endpoint" field.
func EndpointNEQ(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldNEQ(FieldEndpoint, v))
}

// EndpointIn applies the In predicate on the "endpoint" field.
func EndpointIn(vs ...string) predicate.Subscription {
	return predicate.Subscription(sql.FieldIn(FieldEndpoint, vs...))
}

// EndpointNotIn applies the NotIn predicate on the "endpoint" field.
func EndpointNotIn(vs ...string) predicate.Subscription {
	return predicate.Subscription(sql.FieldNotIn(FieldEndpoint, vs...))
}

// EndpointGT applies the GT predicate on the "endpoint" field.
func EndpointGT(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldGT(FieldEndpoint, v))
}

// EndpointGTE applies the GTE predicate on the "endpoint" field.
func EndpointGTE(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldGTE(FieldEndpoint, v))
}

// EndpointLT applies the LT predicate on the "endpoint" field.
func EndpointLT(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldLT(FieldEndpoint, v))
}

// EndpointLTE applies the LTE predicate on the "endpoint" field.
func EndpointLTE(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldLTE(FieldEndpoint, v))
}

// EndpointContains applies the Contains predicate on the "endpoint" field.
func EndpointContains(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldContains(FieldEndpoint, v))
}

// EndpointHasPrefix applies the HasPrefix predicate on the "endpoint" field.
func EndpointHasPrefix(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldHasPrefix(FieldEndpoint, v))
}

// EndpointHasSuffix applies the HasSuffix predicate on the "endpoint" field.
func EndpointHasSuffix(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldHasSuffix(FieldEndpoint, v))
}

// EndpointEqualFold applies the EqualFold predicate on the "endpoint" field.
func EndpointEqualFold(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldEqualFold(FieldEndpoint, v))
}

// EndpointContainsFold applies the ContainsFold predicate on the "endpoint" field.
func EndpointContainsFold(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldContainsFold(FieldEndpoint, v))
}

// P256dhEQ applies the EQ predicate on the "p256dh" field.
func P256dhEQ(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldEQ(FieldP256dh, v))
}

// P256dhNEQ applies the NEQ predicate on the "p256dh" field.
func P256dhNEQ(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldNEQ(FieldP256dh, v))
}

// P256dhIn applies the In predicate on the "p256dh" field.
func P256dhIn(vs ...string) predicate.Subscription {
	return predicate.Subscription(sql.FieldIn(FieldP256dh, vs...))
}

// P256dhNotIn applies the NotIn predicate on the "p256dh" field.
func P256dhNotIn(vs ...string) predicate.Subscription {
	return predicate.Subscription(sql.FieldNotIn(FieldP256dh, vs...))
}

// P256dhGT applies the GT predicate on the "p256dh" field.
func P256dhGT(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldGT(FieldP256dh, v))
}

// P256dhGTE applies the GTE predicate on the "p256dh" field.
func P256dhGTE(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldGTE(FieldP256dh, v))
}

// P256dhLT applies the LT predicate on the "p256dh" field.
func P256dhLT(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldLT(FieldP256dh, v))
}

// P256dhLTE applies the LTE predicate on the "p256dh" field.
func P256dhLTE(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldLTE(FieldP256dh, v))
}

// P256dhContains applies the Contains predicate on the "p256dh" field.
func P256dhContains(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldContains(FieldP256dh, v))
}

// P256dhHasPrefix applies the HasPrefix predicate on the "p256dh" field.
func P256dhHasPrefix(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldHasPrefix(FieldP256dh, v))
}

// P256dhHasSuffix applies the HasSuffix predicate on the "p256dh" field.
func P256dhHasSuffix(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldHasSuffix(FieldP256dh, v))
}

// P256dhEqualFold applies the EqualFold predicate on the "p256dh" field.
func P256dhEqualFold(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldEqualFold(FieldP256dh, v))
}

// P256dhContainsFold applies the ContainsFold predicate on the "p256dh" field.
func P256dhContainsFold(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldContainsFold(FieldP256dh, v))
}

// AuthEQ applies the EQ predicate on the "auth" field.
func AuthEQ(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldEQ(FieldAuth, v))
}

// AuthNEQ applies the NEQ predicate on the "auth" field.
func AuthNEQ(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldNEQ(FieldAuth, v))
}

// AuthIn applies the In predicate on the "auth" field.
func AuthIn(vs ...string) predicate.Subscription {
	return predicate.Subscription(sql.FieldIn(FieldAuth, vs...))
}

// AuthNotIn applies the NotIn predicate on the "auth" field.
func AuthNotIn(vs ...string) predicate.Subscription {
	return predicate.Subscription(sql.FieldNotIn(FieldAuth, vs...))
}

// AuthGT applies the GT predicate on the "auth" field.
func AuthGT(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldGT(FieldAuth, v))
}

// AuthGTE applies the GTE predicate on the "auth" field.
func AuthGTE(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldGTE(FieldAuth, v))
}

// AuthLT applies the LT predicate on the "auth" field.
func AuthLT(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldLT(FieldAuth, v))
}

// AuthLTE applies the LTE predicate on the "auth" field.
func AuthLTE(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldLTE(FieldAuth, v))
}

// AuthContains applies the Contains predicate on the "auth" field.
func AuthContains(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldContains(FieldAuth, v))
}

// AuthHasPrefix applies the HasPrefix predicate on the "auth" field.
func AuthHasPrefix(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldHasPrefix(FieldAuth, v))
}

// AuthHasSuffix applies the HasSuffix predicate on the "auth" field.
func AuthHasSuffix(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldHasSuffix(FieldAuth, v))
}

// AuthEqualFold applies the EqualFold predicate on the "auth" field.
func AuthEqualFold(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldEqualFold(FieldAuth, v))
}

// AuthContainsFold applies the ContainsFold predicate on the "auth" field.
func AuthContainsFold(v string) predicate.Subscription {
	return predicate.Subscription(sql.FieldContainsFold(FieldAuth, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Subscription) predicate.Subscription {
	return predicate.Subscription(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Subscription) predicate.Subscription {
	return predicate.Subscription(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Subscription) predicate.Subscription {
	return predicate.Subscription(sql.NotPredicates(p))
}
