// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CtLogsColumns holds the columns for the "ct_logs" table.
	CtLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "monitor_log_id", Type: field.TypeInt},
		{Name: "ct_log_ta", Type: field.TypeInt, Nullable: true},
	}
	// CtLogsTable holds the schema information for the "ct_logs" table.
	CtLogsTable = &schema.Table{
		Name:       "ct_logs",
		Columns:    CtLogsColumns,
		PrimaryKey: []*schema.Column{CtLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ct_logs_tas_ta",
				Columns:    []*schema.Column{CtLogsColumns[2]},
				RefColumns: []*schema.Column{TasColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EvidenceLogsColumns holds the columns for the "evidence_logs" table.
	EvidenceLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "evidence", Type: field.TypeString},
		{Name: "repository", Type: field.TypeString},
		{Name: "commit_id", Type: field.TypeString},
		{Name: "unique_id", Type: field.TypeBytes},
	}
	// EvidenceLogsTable holds the schema information for the "evidence_logs" table.
	EvidenceLogsTable = &schema.Table{
		Name:       "evidence_logs",
		Columns:    EvidenceLogsColumns,
		PrimaryKey: []*schema.Column{EvidenceLogsColumns[0]},
	}
	// SubscriptionsColumns holds the columns for the "subscriptions" table.
	SubscriptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "endpoint", Type: field.TypeString},
		{Name: "p256dh", Type: field.TypeString},
		{Name: "auth", Type: field.TypeString},
	}
	// SubscriptionsTable holds the schema information for the "subscriptions" table.
	SubscriptionsTable = &schema.Table{
		Name:       "subscriptions",
		Columns:    SubscriptionsColumns,
		PrimaryKey: []*schema.Column{SubscriptionsColumns[0]},
	}
	// TasColumns holds the columns for the "tas" table.
	TasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "public_key", Type: field.TypeBytes},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "evidence_log_ta", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// TasTable holds the schema information for the "tas" table.
	TasTable = &schema.Table{
		Name:       "tas",
		Columns:    TasColumns,
		PrimaryKey: []*schema.Column{TasColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tas_evidence_logs_ta",
				Columns:    []*schema.Column{TasColumns[3]},
				RefColumns: []*schema.Column{EvidenceLogsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CtLogsTable,
		EvidenceLogsTable,
		SubscriptionsTable,
		TasTable,
	}
)

func init() {
	CtLogsTable.ForeignKeys[0].RefTable = TasTable
	TasTable.ForeignKeys[0].RefTable = EvidenceLogsTable
}
